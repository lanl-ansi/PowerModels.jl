language: julia
os:
  - linux
  - osx
julia:
  - 0.7
  - nightly
matrix:
  allow_failures:
    - julia: nightly
cache:
 directories:
   - /home/travis/.julia
addons:
  apt_packages:
    - gfortran

before_install:
    # don't keep an old version of the code in the cache
  - julia -e 'using Pkg; if "PowerModels" in keys(Pkg.installed()) Pkg.rm("PowerModels"); Pkg.rm("PowerModels") end'
  - julia -e 'using Pkg; Pkg.update()' #make sure we get the latest version of METADATA
  - julia -e 'using Pkg; if !("Coverage" in keys(Pkg.installed())) Pkg.add("Coverage") end'
  - julia -e 'using Pkg; if !("Documenter" in keys(Pkg.installed())) Pkg.add("Documenter") end'

script:
  - if [[ -a .git/shallow ]]; then git fetch --unshallow; fi
  - julia -e 'using Pkg; Pkg.clone(pwd())'
  - julia -e 'using Pkg; Pkg.test("PowerModels", coverage=true)'

after_success:
  - julia -e  'using PowerModels; using Coverage; cd(pathof(PowerModels)); LCOV.writefile("lcov.info", process_folder(".")); run(pipeline(`curl -s https://codecov.io/bash`, `bash`))'
  - julia -e  'using PowerModels; cd(pathof(PowerModels)); include(joinpath("docs", "make.jl"))'
